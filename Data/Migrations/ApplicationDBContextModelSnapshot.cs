// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NHT_Marine_BE.Data;

#nullable disable

namespace NHT_Marine_BE.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentCategoryCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.HasIndex("ParentCategoryCategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductItem", b =>
                {
                    b.Property<int>("ProductItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductItemId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackingGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RootProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductItemId");

                    b.HasIndex("RootProductId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.RootProduct", b =>
                {
                    b.Property<int>("RootProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RootProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RootProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.ToTable("RootProducts");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.AppPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionId");

                    b.ToTable("AppPermissions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CartItem", b =>
                {
                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int");

                    b.Property<string>("ImageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("ConversationId");

                    b.HasIndex("SenderStaffId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Conversation", b =>
                {
                    b.Property<int>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConversationId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("ConversationId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerCart", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerCarts");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.RolePermission", b =>
                {
                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesPermissions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("StaffId");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.HasIndex("RoleId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.StaffRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("IsImmutable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("StaffRoles");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductCategory", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.HasOne("NHT_Marine_BE.Models.Product.ProductCategory", "ParentCategory")
                        .WithMany()
                        .HasForeignKey("ParentCategoryCategoryId");

                    b.Navigation("CreatedByStaff");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.RootProduct", "RootProduct")
                        .WithMany()
                        .HasForeignKey("RootProductId");

                    b.Navigation("RootProduct");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.RootProduct", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.Navigation("Category");

                    b.Navigation("CreatedByStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CartItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.CustomerCart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.ChatMessage", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "SenderStaff")
                        .WithMany()
                        .HasForeignKey("SenderStaffId");

                    b.Navigation("Conversation");

                    b.Navigation("SenderStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Conversation", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Conversations")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Customer", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("NHT_Marine_BE.Models.User.Customer", "AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerAddress", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerCart", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.RolePermission", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.AppPermission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.User.StaffRole", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Staff", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Account", "Account")
                        .WithOne("Staff")
                        .HasForeignKey("NHT_Marine_BE.Models.User.Staff", "AccountId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.HasOne("NHT_Marine_BE.Models.User.StaffRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Account");

                    b.Navigation("CreatedByStaff");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductItem", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Account", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.AppPermission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Carts");

                    b.Navigation("Conversations");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerCart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.StaffRole", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
