// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NHT_Marine_BE.Data;

#nullable disable

namespace NHT_Marine_BE.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250717204724_AddInventoryDistributedStatus")]
    partial class AddInventoryDistributedStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductAttribute", b =>
                {
                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.HasKey("ProductItemId", "OptionId");

                    b.HasIndex("OptionId");

                    b.ToTable("ProductAttributes");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductItem", b =>
                {
                    b.Property<int>("ProductItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductItemId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackingGuide")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("RootProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductItemId");

                    b.HasIndex("RootProductId");

                    b.ToTable("ProductItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductPromotion", b =>
                {
                    b.Property<int?>("PromotionId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("PromotionId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsPromotions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductVariant", b =>
                {
                    b.Property<int>("VariantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VariantId"));

                    b.Property<bool>("IsAdjustable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RootProductId")
                        .HasColumnType("int");

                    b.HasKey("VariantId");

                    b.HasIndex("RootProductId");

                    b.ToTable("ProductVariants");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DiscountRate")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PromotionId");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.RootProduct", b =>
                {
                    b.Property<int>("RootProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RootProductId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RootProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.ToTable("RootProducts");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.VariantOption", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionId"));

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VariantId")
                        .HasColumnType("int");

                    b.HasKey("OptionId");

                    b.HasIndex("VariantId");

                    b.ToTable("VariantOptions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.DamageReportItem", b =>
                {
                    b.Property<int?>("ReportId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExpectedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ReportId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("DamageReportItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.DamageType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("DamageTypes");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ImportItem", b =>
                {
                    b.Property<int?>("ImportId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ImportId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ImportItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.Inventory", b =>
                {
                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("StorageId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ProductDamageReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReportedBy")
                        .HasColumnType("int");

                    b.Property<int?>("ReportedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<int?>("StorageId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalExpectedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("ReportedByStaffStaffId");

                    b.HasIndex("StorageId");

                    b.HasIndex("TypeId");

                    b.ToTable("ProductDamageReports");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ProductImport", b =>
                {
                    b.Property<int>("ImportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportId"));

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDistributed")
                        .HasColumnType("bit");

                    b.Property<int?>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TrackedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrackedBy")
                        .HasColumnType("int");

                    b.Property<int?>("TrackedByStaffStaffId")
                        .HasColumnType("int");

                    b.HasKey("ImportId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("TrackedByStaffStaffId");

                    b.ToTable("ProductImports");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.Storage", b =>
                {
                    b.Property<int>("StorageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorageId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("StorageId");

                    b.HasIndex("TypeId");

                    b.ToTable("Storages");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.StorageType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeId");

                    b.ToTable("StorageTypes");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.Coupon", b =>
                {
                    b.Property<int>("CouponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CouponId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedByStaffStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiredAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxUsage")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("CouponId");

                    b.HasIndex("CreatedByStaffStaffId");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.DeliveryService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.ToTable("DeliveryServices");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderStatusId")
                        .HasColumnType("int");

                    b.Property<string>("RecipientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CouponId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderDelivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<int?>("DeliveryServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EstimatedPickupTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DeliveryId");

                    b.HasIndex("DeliveryServiceId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDeliveries");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderItem", b =>
                {
                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccounted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultState")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnfulfilled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StatusId");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderStatusUpdateLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedByStaffStaffId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.HasIndex("OrderId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UpdatedByStaffStaffId");

                    b.ToTable("OrderStatusUpdateLogs");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.StatusTransition", b =>
                {
                    b.Property<int>("TransitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransitionId"));

                    b.Property<int?>("FromStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ToStatusId")
                        .HasColumnType("int");

                    b.HasKey("TransitionId");

                    b.HasIndex("FromStatusId");

                    b.HasIndex("ToStatusId");

                    b.ToTable("StatusTransitions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.AppPermission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PermissionId");

                    b.ToTable("AppPermissions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CartItem", b =>
                {
                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductItemId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.ChatMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MessageId"));

                    b.Property<int?>("ConversationId")
                        .HasColumnType("int");

                    b.Property<string>("ImageContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SenderStaffId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SentAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("TextContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MessageId");

                    b.HasIndex("ConversationId");

                    b.HasIndex("SenderStaffId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Conversation", b =>
                {
                    b.Property<int>("ConversationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConversationId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("ConversationId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerAddress", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipientName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerCart", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerCarts");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.RolePermission", b =>
                {
                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolesPermissions");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"));

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("StaffId");

                    b.HasIndex("AccountId")
                        .IsUnique()
                        .HasFilter("[AccountId] IS NOT NULL");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("RoleId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.StaffRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<bool>("IsImmutable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("StaffRoles");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.Category", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.HasOne("NHT_Marine_BE.Models.Product.Category", "ParentCategory")
                        .WithMany("ChildrenCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("CreatedByStaff");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductAttribute", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.VariantOption", "Option")
                        .WithMany("ProductItems")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("Attributes")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.RootProduct", "RootProduct")
                        .WithMany("ProductItems")
                        .HasForeignKey("RootProductId");

                    b.Navigation("RootProduct");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductPromotion", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.RootProduct", "Product")
                        .WithMany("Promotions")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Product.Promotion", "Promotion")
                        .WithMany("Products")
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductVariant", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.RootProduct", "RootProduct")
                        .WithMany("Variants")
                        .HasForeignKey("RootProductId");

                    b.Navigation("RootProduct");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.Promotion", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.Navigation("CreatedByStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.RootProduct", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.Navigation("Category");

                    b.Navigation("CreatedByStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.VariantOption", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.ProductVariant", "Variant")
                        .WithMany("Options")
                        .HasForeignKey("VariantId");

                    b.Navigation("Variant");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.DamageReportItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("DamageReports")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Stock.ProductDamageReport", "Report")
                        .WithMany("Items")
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ImportItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Stock.ProductImport", "Import")
                        .WithMany("Items")
                        .HasForeignKey("ImportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("Imports")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Import");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.Inventory", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("Storages")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Stock.Storage", "Storage")
                        .WithMany("ProductItems")
                        .HasForeignKey("StorageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductItem");

                    b.Navigation("Storage");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ProductDamageReport", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "ReportedByStaff")
                        .WithMany()
                        .HasForeignKey("ReportedByStaffStaffId");

                    b.HasOne("NHT_Marine_BE.Models.Stock.Storage", "Storage")
                        .WithMany()
                        .HasForeignKey("StorageId");

                    b.HasOne("NHT_Marine_BE.Models.Stock.DamageType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("ReportedByStaff");

                    b.Navigation("Storage");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ProductImport", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Stock.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "TrackedByStaff")
                        .WithMany()
                        .HasForeignKey("TrackedByStaffStaffId");

                    b.Navigation("Supplier");

                    b.Navigation("TrackedByStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.Storage", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Stock.StorageType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.Coupon", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany()
                        .HasForeignKey("CreatedByStaffStaffId");

                    b.Navigation("CreatedByStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.Order", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Transaction.Coupon", "Coupon")
                        .WithMany()
                        .HasForeignKey("CouponId");

                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.HasOne("NHT_Marine_BE.Models.Transaction.OrderStatus", "OrderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId");

                    b.Navigation("Coupon");

                    b.Navigation("Customer");

                    b.Navigation("OrderStatus");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderDelivery", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Transaction.DeliveryService", "DeliveryService")
                        .WithMany()
                        .HasForeignKey("DeliveryServiceId");

                    b.HasOne("NHT_Marine_BE.Models.Transaction.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.Navigation("DeliveryService");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Transaction.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("Orders")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.OrderStatusUpdateLog", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Transaction.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");

                    b.HasOne("NHT_Marine_BE.Models.Transaction.OrderStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "UpdatedByStaff")
                        .WithMany()
                        .HasForeignKey("UpdatedByStaffStaffId");

                    b.Navigation("Order");

                    b.Navigation("Status");

                    b.Navigation("UpdatedByStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.StatusTransition", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.Transaction.OrderStatus", "FromStatus")
                        .WithMany()
                        .HasForeignKey("FromStatusId");

                    b.HasOne("NHT_Marine_BE.Models.Transaction.OrderStatus", "ToStatus")
                        .WithMany()
                        .HasForeignKey("ToStatusId");

                    b.Navigation("FromStatus");

                    b.Navigation("ToStatus");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CartItem", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.CustomerCart", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.Product.ProductItem", "ProductItem")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("ProductItem");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.ChatMessage", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Conversation", "Conversation")
                        .WithMany("Messages")
                        .HasForeignKey("ConversationId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "SenderStaff")
                        .WithMany()
                        .HasForeignKey("SenderStaffId");

                    b.Navigation("Conversation");

                    b.Navigation("SenderStaff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Conversation", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Conversations")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Customer", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("NHT_Marine_BE.Models.User.Customer", "AccountId");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerAddress", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerCart", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.RolePermission", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.AppPermission", "Permission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NHT_Marine_BE.Models.User.StaffRole", "Role")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Staff", b =>
                {
                    b.HasOne("NHT_Marine_BE.Models.User.Account", "Account")
                        .WithOne("Staff")
                        .HasForeignKey("NHT_Marine_BE.Models.User.Staff", "AccountId");

                    b.HasOne("NHT_Marine_BE.Models.User.Staff", "CreatedByStaff")
                        .WithMany("CreatedStaffs")
                        .HasForeignKey("CreatedBy");

                    b.HasOne("NHT_Marine_BE.Models.User.StaffRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Account");

                    b.Navigation("CreatedByStaff");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.Category", b =>
                {
                    b.Navigation("ChildrenCategories");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductItem", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("CartItems");

                    b.Navigation("DamageReports");

                    b.Navigation("Imports");

                    b.Navigation("Orders");

                    b.Navigation("Storages");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.ProductVariant", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.Promotion", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.RootProduct", b =>
                {
                    b.Navigation("ProductItems");

                    b.Navigation("Promotions");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Product.VariantOption", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ProductDamageReport", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.ProductImport", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Stock.Storage", b =>
                {
                    b.Navigation("ProductItems");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.Transaction.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Account", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.AppPermission", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Conversation", b =>
                {
                    b.Navigation("Messages");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Customer", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Carts");

                    b.Navigation("Conversations");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.CustomerCart", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.Staff", b =>
                {
                    b.Navigation("CreatedStaffs");
                });

            modelBuilder.Entity("NHT_Marine_BE.Models.User.StaffRole", b =>
                {
                    b.Navigation("Permissions");
                });
#pragma warning restore 612, 618
        }
    }
}
